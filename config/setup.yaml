---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: openshift-gitops-operator
  namespace: openshift-gitops-operator
spec:
  channel: "latest"
  installPlanApproval: Automatic
  name: openshift-gitops-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  config:
    env:
      - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
        value: 'openshift-gitops, open-cluster-management-global-set'
---  
apiVersion: apps.open-cluster-management.io/v1beta1
kind: GitOpsCluster
metadata:
  name: global 
  namespace: open-cluster-management-global-set 
spec:
  argoServer:
    cluster: local-cluster
    argoNamespace: open-cluster-management-global-set 
  placementRef:
    kind: Placement
    apiVersion: cluster.open-cluster-management.io/v1beta1
    name: global-appset-placement 
    namespace: open-cluster-management-global-set 
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: global-appset-placement 
  namespace: open-cluster-management-global-set 
spec:
  predicates:
  - requiredClusterSelector:
      labelSelector:
        matchExpressions:
          - {key: useglobal, operator: In, values: ["true"]}
---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: globalns
  namespace: open-cluster-management-global-set
spec:
  # This enables the application set controller
  applicationSet: {}
  # This enables the ArgoCD instance to use OpenShift OAuth
  dex:
    openShiftOAuth: true
  server:
    route:
      enabled: true
  groups:
    - default
  rbac:
    defaultPolicy: 'role:readonly'
    policy: |
      g, cluster-admins, role:admin
      g, red-admins, role:admin
    scopes: '[groups]'
  repo:
    env:
    - name: KUSTOMIZE_PLUGIN_HOME
      value: /etc/kustomize/plugin
    initContainers:
    - name: policy-generator-install
      image: registry.redhat.io/rhacm2/multicluster-operators-subscription-rhel8:v2.6.1-1 
      command: ["/bin/bash"]
      args: ["-c", "cp /etc/kustomize/plugin/policy.open-cluster-management.io/v1/policygenerator/PolicyGenerator /policy-generator/PolicyGenerator"]
      volumeMounts:
      - mountPath: /policy-generator
        name: policy-generator
    volumeMounts:
    - mountPath: /etc/kustomize/plugin/policy.open-cluster-management.io/v1/policygenerator
      name: policy-generator
    volumes:
    - emptyDir: {}
      name: policy-generator
  kustomizeBuildOptions: --enable-alpha-plugins
---
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: open-cluster-management-global-set
  name: permissions
rules:
- apiGroups: ["apps.open-cluster-management.io", "cluster.open-cluster-management.io"] # "" indicates the core API group
  resources: ["placementrules", "placementdecisions"]
  verbs: ["list"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appset-rolebinding
  namespace: open-cluster-management-global-set
subjects:
- kind: ServiceAccount
  name: globalns-applicationset-controller
  namespace: open-cluster-management-global-set
roleRef:
  kind: Role
  name: permissions
  namespace: open-cluster-management-global-set
  apiGroup: rbac.authorization.k8s.io

